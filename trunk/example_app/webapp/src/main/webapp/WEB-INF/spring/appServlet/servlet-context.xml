<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${db.driver}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean>
	
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="cerif-persistence-unit" />
		<property name="packagesToScan">
			<list>
	            <value>gr.ekt.cerif.entities</value>
	            <value>gr.ekt.cerif.features</value>
	        </list>
		</property>
        <property name="dataSource" ref="dataSource" />
        <property name="jpaProperties">
        	<props>
        		<prop key="hibernate.dialect">${hibernate.dialect}</prop>
        		<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
        		<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
        		<prop key="hibernate.search.default.indexBase">${hibernate.indexBase}</prop>
        		<prop key="hibernate.search.indexing_strategy">${hibernate.search.indexing_strategy}</prop>
        		
        		<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
        		<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
        		<prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>
        	</props>
        </property>
        <property name="jpaVendorAdapter" ref="vendorAdapter" />
    </bean>
    
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
    	<constructor-arg ref="entityManagerFactory" />
    </bean>

	<bean id="vendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
	    <property name="showSql" value="false"/>
	    <property name="generateDdl" value="false" />
        <property name="databasePlatform" value="${hibernate.dialect}" />
	</bean>
		
	<bean id="ServicesExceptionTranslator" class="org.springframework.orm.hibernate4.HibernateExceptionTranslator"/>
	
	<tx:annotation-driven transaction-manager="transactionManager" />

	<jpa:repositories base-package="gr.ekt.*" />
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven/>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<context:component-scan base-package="gr.ekt.exampleapp.*, gr.ekt.cerif" />
		
</beans>
