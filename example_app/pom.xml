<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>gr.ekt</groupId>
  <artifactId>example_app</artifactId>
  <version>0.9.2</version>
  <packaging>pom</packaging>
  <name>Example App</name>
  
  <modules>
     <module>webapp</module>
  </modules>
  
  <profiles>
		<profile>
                 <id>example</id>
                 <activation>
                       <activeByDefault>false</activeByDefault>
                 </activation>
                 <properties>
                       <target.version>0.1</target.version>
                		<db.driver>com.mysql.jdbc.Driver</db.driver>
                		<db.url>jdbc:mysql://localhost:3306/example_db?characterEncoding=utf8</db.url>
                		<db.username>root</db.username>
                		<db.password>pass</db.password>
                       
                       <!-- validate | update | create | create-drop -->
                       <hibernate.hbm2ddl.auto>create</hibernate.hbm2ddl.auto>
                       <hibernate.dialect>org.hibernate.dialect.MySQL5InnoDBDialect</hibernate.dialect>
                       <hibernate.show_sql>false</hibernate.show_sql>
                       <hibernate.indexBase>/usr/local/lucene/example_app</hibernate.indexBase>
                       <!-- set to "manual" to disable lucene indexing -->
                       <hibernate.search.indexing_strategy>manual</hibernate.search.indexing_strategy>
                       
                       <hibernate.cache.use_second_level_cache>false</hibernate.cache.use_second_level_cache>
                       <hibernate.cache.use_query_cache>false</hibernate.cache.use_query_cache>
                       <hibernate.cache.region.factory_class>org.hibernate.cache.ehcache.EhCacheRegionFactory</hibernate.cache.region.factory_class>
                       <hibernate.database_type>MYSQL</hibernate.database_type> 
                       
                       <log4j.appender.file.File>/usr/local/tomcat/logs/example_app.log</log4j.appender.file.File>
                       <log4j.propertiesfile.rootLogger>DEBUG, file</log4j.propertiesfile.rootLogger>
					   <log4j.propertiesfile.logging>DEBUG</log4j.propertiesfile.logging>
						
                       <display-name>Example App</display-name>
                       <servlet-name>Example_App</servlet-name>
                       <webAppRootKey>example.webapp.root</webAppRootKey>
                 </properties>
        </profile>
        
        <profile>
                 <id>example-postgres</id>
                 <activation>
                       <activeByDefault>false</activeByDefault>
                 </activation>
                 <properties>
                       <target.version>0.1</target.version>
                		<db.driver>org.postgresql.Driver</db.driver>
                		<db.url>jdbc:postgresql://localhost:5432/example_db?characterEncoding=utf8</db.url>
                		<db.username>postgres</db.username>
                       <db.password>pass</db.password>
                       
                       <!-- validate | update | create | create-drop -->
                       <hibernate.hbm2ddl.auto>validate</hibernate.hbm2ddl.auto>
                       <hibernate.dialect>org.hibernate.dialect.PostgreSQLDialect</hibernate.dialect>
                       <hibernate.show_sql>false</hibernate.show_sql>
                       <hibernate.indexBase>/usr/local/lucene/example_app</hibernate.indexBase>
                       <!-- set to "manual" to disable lucene indexing -->
                       <hibernate.search.indexing_strategy>manual</hibernate.search.indexing_strategy>
                       
                       <hibernate.cache.use_second_level_cache>false</hibernate.cache.use_second_level_cache>
                       <hibernate.cache.use_query_cache>false</hibernate.cache.use_query_cache>
                       <hibernate.cache.region.factory_class>org.hibernate.cache.ehcache.EhCacheRegionFactory</hibernate.cache.region.factory_class>
                       <hibernate.database_type>POSTGRESQL</hibernate.database_type>
                       
                       <log4j.appender.file.File>/usr/local/tomcat/logs/example_app.log</log4j.appender.file.File>
                       <log4j.propertiesfile.rootLogger>DEBUG, file</log4j.propertiesfile.rootLogger>
					   <log4j.propertiesfile.logging>DEBUG</log4j.propertiesfile.logging>
						
                       <display-name>Example App</display-name>
                       <servlet-name>Example_App</servlet-name>
                       <webAppRootKey>example.webapp.root</webAppRootKey>
                 </properties>
        </profile>
	</profiles>
	
	<properties>
		<maven.test.skip>true</maven.test.skip>
		<maven.test.failure.ignore>true</maven.test.failure.ignore>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java-version>1.6</java-version>
		<org.springframework-version>3.2.8.RELEASE</org.springframework-version>
		<org.springframework.security-version>3.2.0.RELEASE</org.springframework.security-version>
		<org.aspectj-version>1.6.9</org.aspectj-version>
		<org.slf4j-version>1.7.5</org.slf4j-version>
	</properties>
	
	 <build>
		<plugins>
		
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java-version}</source>
					<target>${java-version}</target>
				</configuration>
			</plugin>
	
		</plugins>
	</build>
	
	<dependencies>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.29</version>
			<type>jar</type>
			<scope>provided</scope>
		</dependency>
		
		<!-- <dependency>
				<groupId>postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>9.1-901-1.jdbc4</version>
				<type>jar</type>
				<scope>provided</scope>
			</dependency> -->
	</dependencies>

</project>